<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ngc7293&#39;s blog</title>
    <link>https://ngc7292.github.io/posts/</link>
    <description>Recent content in Posts on ngc7293&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 02 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://ngc7292.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Review of the base algorithm, nndl and advanced network for doc examination.</title>
      <link>https://ngc7292.github.io/posts/review_doc_exam/</link>
      <pubDate>Thu, 02 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ngc7292.github.io/posts/review_doc_exam/</guid>
      <description>内存数据组织 数组(连续存储方式下的一维、二维、三维数组地址计算) 一般来说，内存中数据的组织格式包括按行存取以及按列存取，其地址起始位置包含0或者1，此类题目需要具体问题具体分析。
顺序表(查找算法、插入算法和删除算法;性能评估) 顺序表查找较为简单，一般为从第一个遍历到最后一个即可完成，插入算法以及删除算法同理，对于python等语言，对于顺序表的实现不对用户所展示，而对于类似C这种高级语言，程序员需要对其进行定义。
 顺序表的特点： ①、随机访问，既可以在O(1)时间内找到第i个元素。 ②、存储密度高，每个节点只存储数据元素。 ③、扩展容量不方便（即便采用动态分配的方式实现，扩展长度的时间复杂度也比较高）。 ④、插入、删除操作不方便，需要移动大量元素。
 静态存储实现方式：
#define MaxSize 10 typedef struct{ ElemType data[MaxSize]; int length; }SqList; 如果不进行初始化，将会出现默认数据【即脏数据】
动态分配存储实现方式：
#define MaxSize 10 typedef struct{ ElemType *data; int MaxSize; int length; }SqList; // For C++ L.data = new ElemType[MaxSize] // For C L.data = (ElemType *)malloc(sizeof(ElemType)*MaxSize) 当顺序表存满时可以采用malloc或者new继续申请内存，同时增加MaxSize数量。
对于插入算法，当遍历到该点时将后续点进行后移操作，删除需要将后面的进行前移。
查找的时间复杂度平均为 $O(n)$ 。
栈（顺序栈、多栈共享一段连续存储空间） 顺序栈，意为顺序表实现的栈结构，即只需要从0地址开始存取。
#include &amp;lt;stdio.h&amp;gt;//元素elem进栈 int push(int* a, int top, int elem) { a[++top] = elem; return top; } //数据元素出栈 int pop(int* a, int top) { if (top == -1) { printf(&amp;#34;空栈&amp;#34;); return -1; } printf(&amp;#34;弹栈元素：%d\n&amp;#34;, a[top]); top--; return top; } 但是需要判断插入与删除时是否越界。</description>
    </item>
    
    <item>
      <title>Data view for LLM pre-training</title>
      <link>https://ngc7292.github.io/posts/data_for_llm/</link>
      <pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ngc7292.github.io/posts/data_for_llm/</guid>
      <description>&lt;p&gt;In this blog, we aims to provide a˜ data&amp;rsquo;s view to research the emergence ability of large language model(LLM),  and provide some point for NLP community to reproduce the GPT-3 or PaLM easily.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>New AI World&#39;s fundamental: Model, Data and Eval.</title>
      <link>https://ngc7292.github.io/posts/fundational_model_paper_list/</link>
      <pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ngc7292.github.io/posts/fundational_model_paper_list/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://img.shields.io/badge/ModelPaperNumber-25-brightgreen&#34;&gt;25-paper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this blog/repo, we collect some paper about fundational model&amp;rsquo;s training methods, architecture, evaluation and training data processing, to find some key point to reproduce the more intelligent and more openful large language model!&lt;/p&gt;
&lt;p&gt;(This repo is constantly updated.)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>useful package in python</title>
      <link>https://ngc7292.github.io/posts/useful_package/</link>
      <pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ngc7292.github.io/posts/useful_package/</guid>
      <description>&lt;p&gt;这里汇总一些小众但是常用的python以及其他软件包&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>谱图与代数图论读书笔记7</title>
      <link>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory_7/</link>
      <pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory_7/</guid>
      <description>&lt;p&gt;这两章定义了两个物理上的知识，通过定义等效电阻来表征一个电阻网络的性质以及特点。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>谱图与代数图论读书笔记6</title>
      <link>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory_6/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory_6/</guid>
      <description>&lt;p&gt;这里进入到了该书的第三部分，即 Physical Metaphors ，图的物理意义，第十章是本部分的第一章，也是讲图谱理论与运动的部分结合的开始。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>谱图与代数图论读书笔记5</title>
      <link>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory_5/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory_5/</guid>
      <description>这三章内容讲述了包括caylay图，强征则图，以及随机游走矩阵的部分性质和特性，我先挖个坑以后再填。</description>
    </item>
    
    <item>
      <title>谱图与代数图论读书笔记4</title>
      <link>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory_4/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory_4/</guid>
      <description>&lt;p&gt;sagt这本书已经读完第一部分，在这篇文章中对于第一部分的内容进行简单的回顾以及思考，并写下对于第六章的笔记。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>谱图与代数图论读书笔记3</title>
      <link>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory_3/</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory_3/</guid>
      <description>&lt;p&gt;第四章对于邻接矩阵以及特征值的一些性质以及一些特性进行了分析，并对Perron-Frobenius 定理进行了给出以及证明。&lt;/p&gt;
&lt;p&gt;第五章主要提出了关于第二大特征值的解法以及对于几种特别的图的例子，并对其加以证明。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>谱图与代数图论读书笔记2</title>
      <link>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory_2/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory_2/</guid>
      <description>&lt;p&gt;谱图理论第二章用于描述矩阵作为自然的优化方案存在的，并给出&lt;a href=&#34;https://en.wikipedia.org/wiki/Min-max_theorem&#34;&gt;min max theorem&lt;/a&gt;，并通过谱定理来证明Courant-Fischer Theorem理论，之后通过该理论证明谱定理。&lt;/p&gt;
&lt;p&gt;第三章用于描述拉普拉斯矩阵的一些性质以及通过拉普拉斯矩阵的特征值对图进行绘制。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ngc7292.github.io/posts/how_mlp_and_cnn/</link>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ngc7292.github.io/posts/how_mlp_and_cnn/</guid>
      <description>÷</description>
    </item>
    
    <item>
      <title>谱图与代数图论读书笔记</title>
      <link>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory/</link>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ngc7292.github.io/posts/spectral_algerbraic_graph_theory/</guid>
      <description>&lt;p&gt;谱图与代数理论（spectral and algebraic graph theory）主要是关于图的组合特性以及与关联矩阵相关的一些代数特性以及其应用，这里是第一章的读书笔记。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
